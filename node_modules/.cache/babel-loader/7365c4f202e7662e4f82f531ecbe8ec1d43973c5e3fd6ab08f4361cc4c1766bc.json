{"ast":null,"code":"var _jsxFileName = \"C:\\\\pft\\\\project-finance-tracker-frontend\\\\src\\\\Components\\\\fetchers\\\\projectFetcher.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst baseUrl = 'https://projectfinancetracker-backend-2f2604a2f7f0.herokuapp.com';\nconst ProjectFetcher = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [newProjectName, setNewProjectName] = useState('');\n  useEffect(() => {\n    const fetchProjects = async () => {\n      const userID = localStorage.getItem('fiscalfoxID');\n      const token = localStorage.getItem('token');\n      try {\n        const response = await fetch(`${baseUrl}/projects`, {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}` // Assuming the token is stored under this key\n          }\n        });\n        const data = await response.json();\n        if (response.ok) {\n          setProjects(data);\n        } else {\n          throw new Error(data.message || \"Failed to fetch projects\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching projects:\", error);\n      }\n    };\n    fetchProjects();\n  }, []);\n  const handleAddProject = async e => {\n    e.preventDefault();\n    const userID = localStorage.getItem('fiscalfoxID');\n    const token = localStorage.getItem('token');\n    try {\n      const response = await fetch(`${baseUrl}/projects`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          name: newProjectName,\n          user: {\n            id: userID\n          }\n        })\n      });\n      const newProject = await response.json();\n      if (response.ok) {\n        setProjects([...projects, newProject]);\n        setNewProjectName(''); // Reset the input field after successful addition\n      } else {\n        throw new Error(newProject.message || \"Failed to add project\");\n      }\n    } catch (error) {\n      console.error(\"Error adding project:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: project.name\n        }, project._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), project.expenses.map(expenses => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: expenses.description\n          }, project._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)\n        }, void 0, false))]\n      }, void 0, true))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddProject,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newProjectName,\n        onChange: e => setNewProjectName(e.target.value),\n        placeholder: \"New Project Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectFetcher, \"t83Fa2tBHQrfUEBTMsQCdA0X6PU=\");\n_c = ProjectFetcher;\nexport default ProjectFetcher;\nvar _c;\n$RefreshReg$(_c, \"ProjectFetcher\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","baseUrl","ProjectFetcher","_s","projects","setProjects","newProjectName","setNewProjectName","fetchProjects","userID","localStorage","getItem","token","response","fetch","headers","data","json","ok","Error","message","error","console","handleAddProject","e","preventDefault","method","body","JSON","stringify","name","user","id","newProject","children","fileName","_jsxFileName","lineNumber","columnNumber","map","project","_id","expenses","description","onSubmit","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/pft/project-finance-tracker-frontend/src/Components/fetchers/projectFetcher.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst baseUrl = 'https://projectfinancetracker-backend-2f2604a2f7f0.herokuapp.com';\r\n\r\nconst ProjectFetcher = () => {\r\n  const [projects, setProjects] = useState([]);\r\n  const [newProjectName, setNewProjectName] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchProjects = async () => {\r\n      const userID = localStorage.getItem('fiscalfoxID');\r\n      const token = localStorage.getItem('token');\r\n      try {\r\n        const response = await fetch(`${baseUrl}/projects`, {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`, // Assuming the token is stored under this key\r\n          }\r\n        });\r\n        const data = await response.json();\r\n        if (response.ok) {\r\n          setProjects(data);\r\n        } else {\r\n          throw new Error(data.message || \"Failed to fetch projects\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching projects:\", error);\r\n      }\r\n    };\r\n\r\n    fetchProjects();\r\n  }, []);\r\n\r\n  const handleAddProject = async (e) => {\r\n    e.preventDefault();\r\n    const userID = localStorage.getItem('fiscalfoxID');\r\n    const token = localStorage.getItem('token');\r\n    try {\r\n      const response = await fetch(`${baseUrl}/projects`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({ name: newProjectName, user: { id:userID }}),\r\n      });\r\n      const newProject = await response.json();\r\n      if (response.ok) {\r\n        setProjects([...projects, newProject]);\r\n        setNewProjectName(''); // Reset the input field after successful addition\r\n      } else {\r\n        throw new Error(newProject.message || \"Failed to add project\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error adding project:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>My Projects</h2>\r\n      <ul>\r\n        {projects.map(project => (\r\n          <>\r\n            <li key={project._id}>{project.name}</li>\r\n            {project.expenses.map(expenses => (\r\n              <>\r\n                <li key={project._id}>{expenses.description}</li>\r\n              </>\r\n            ))}\r\n          </>\r\n        ))}\r\n      </ul>\r\n      <form onSubmit={handleAddProject}>\r\n        <input\r\n          type=\"text\"\r\n          value={newProjectName}\r\n          onChange={e => setNewProjectName(e.target.value)}\r\n          placeholder=\"New Project Name\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Add Project</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectFetcher;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}