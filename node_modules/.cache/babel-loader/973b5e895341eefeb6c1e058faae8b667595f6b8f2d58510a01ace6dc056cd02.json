{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import{useAuth}from'./AuthContext';// Import useAuth only\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const baseUrl='https://projectfinancetracker-backend-2f2604a2f7f0.herokuapp.com';// Adjust according to your backend server\nfunction Login(){const navigate=useNavigate();const{login}=useAuth();// State for login form\nconst[formData,setFormData]=useState({email:'',password:''});// Handle form input changes\nconst handleChange=e=>{setFormData({...formData,[e.target.name]:e.target.value});};// Handle form submission\nconst handleSubmit=async e=>{e.preventDefault();// Prevent the form from submitting the traditional way\nconst requestOptions={method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(formData)};try{// Update the fetch URL to your backend endpoint for login\nconst response=await fetch(\"\".concat(baseUrl,\"/auth/login\"),requestOptions);if(!response.ok){throw new Error('Network response was not ok');}const data=await response.json();// Handle response data\nconsole.log(data);// Assuming 'data' contains a success indicator or token\n// Store token in localStorage or sessionStorage\nlocalStorage.setItem('token',data.token);// Assuming 'data.token' is your token\nlocalStorage.setItem('isLoggedIn',true);login(data.token);console.log(localStorage.getItem('token'));console.log(localStorage.getItem('isLoggedIn'));// You might want to save the token to localStorage/sessionStorage here\nnavigate('/');// Redirect to homepage upon successful login\n}catch(error){console.error('Error during login:',error);// Display error message to user, maybe in a state variable to be rendered in the UI\n}};return/*#__PURE__*/_jsxs(\"div\",{className:\"login-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"email\",placeholder:\"Email\",value:formData.email,onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",placeholder:\"Password\",value:formData.password,onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Login\"})]})]});}export default Login;","map":{"version":3,"names":["React","useState","useNavigate","useAuth","jsx","_jsx","jsxs","_jsxs","baseUrl","Login","navigate","login","formData","setFormData","email","password","handleChange","e","target","name","value","handleSubmit","preventDefault","requestOptions","method","headers","body","JSON","stringify","response","fetch","concat","ok","Error","data","json","console","log","localStorage","setItem","token","getItem","error","className","children","onSubmit","type","placeholder","onChange","required"],"sources":["C:/projectfinancetracker/project-finance-tracker-frontend/src/login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from './AuthContext'; // Import useAuth only\r\n\r\n\r\n\r\n\r\nconst baseUrl = 'https://projectfinancetracker-backend-2f2604a2f7f0.herokuapp.com'; // Adjust according to your backend server\r\n\r\nfunction Login() {\r\n  const navigate = useNavigate();\r\n  const { login } = useAuth();\r\n  // State for login form\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  // Handle form input changes\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault(); // Prevent the form from submitting the traditional way\r\n  \r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(formData),\r\n    };\r\n  \r\n    try {\r\n      // Update the fetch URL to your backend endpoint for login\r\n      const response = await fetch(`${baseUrl}/auth/login`, requestOptions);\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      const data = await response.json();\r\n  \r\n      // Handle response data\r\n      console.log(data);\r\n      // Assuming 'data' contains a success indicator or token\r\n      // Store token in localStorage or sessionStorage\r\n      localStorage.setItem('token', data.token); // Assuming 'data.token' is your token\r\n      localStorage.setItem('isLoggedIn', true);\r\n      login(data.token);\r\n      console.log(localStorage.getItem('token'));\r\n      console.log(localStorage.getItem('isLoggedIn'));\r\n      // You might want to save the token to localStorage/sessionStorage here\r\n      navigate('/'); // Redirect to homepage upon successful login\r\n    } catch (error) {\r\n      console.error('Error during login:', error);\r\n      // Display error message to user, maybe in a state variable to be rendered in the UI\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          value={formData.email}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          value={formData.password}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}